#!/bin/bash
# source scripts/env.sh
VERSION="0.1.0-RC"
if [[ -z "${CS_BASEDIR}" ]]; then
    # export BASEDIR=$(dirname "$0")
    export BASEDIR=/opt/cloudscripts/scripts
else
    export BASEDIR=${CS_BASEDIR}
fi
export CLOUD_PROVIDER="changeme"
export PARENTDIR="/opt/cloudscripts-${VERSION}"
echo "BASEDIR set as ${BASEDIR}"
echo "PARENTDIR set as ${PARENTDIR}"

export CURL=/usr/bin/curl
export COMMANDS="${BASEDIR}/commands"
export USR_LOCAL_BIN="/usr/local/bin"

export DEBIAN_VERSION=debian11
export OS_RELEASE=$(. /etc/os-release;echo $ID$VERSION_ID | sed -e 's/\.//g')

source $BASEDIR/colors.sh

# PACKAGE VERSIONS
export GOPL_VERSION="v3.10.0"

source $BASEDIR/utils.sh

exit_error() {                         # Function: Exit with error.
  usage
  exit 1
}
exit_ok() {                         # Function: Exit with error.
  usage
  exit 0
}

usage() {                                 # Function: Print a help message.
  echo "Usage: $0 [ -i PKG ]" 1>&2 
}

Help()
{
   # Display Help
   echo "Install packages and services"
   echo
   echo "Syntax: $0 [ -i PKG ] [-h]"
   echo "options:"
   echo "i     Install a package from shared/commands"
   echo "v     Version of cscli"
   echo "h     Print this Help."
   echo
}

PKG=""
while getopts "i:v:h" option; do
    case $option in
        i)
            PKG=${OPTARG}
            install_command $PKG
            # echo cmd: $COMMAND
            ;;
        v)
            echo ${VERSION}
            ;;
        h)
            Help
            ;;
        :)
            echo "Error: -${OPTARG} requires an argument."
            exit_error
            ;;
        \?)
            echo "Error: Invalid option"
            usage
            exit;;
              

    esac
done
                    
            
