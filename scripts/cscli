#!/bin/bash
# source scripts/env.sh
VERSION="0.4.0"

if [[ -z "${CS_BASEDIR}" ]]; then
    # export BASEDIR=$(dirname "$0")
    export BASEDIR="/opt/cloudscripts-${VERSION}/scripts"
else
    export BASEDIR=${CS_BASEDIR}
fi
# commons paths, variables & commands
export PARENTDIR="/opt/cloudscripts-${VERSION}"
export COMMANDS="${BASEDIR}/commands"
export SERVICES="${BASEDIR}/services"
export CURL=/usr/bin/curl
export USR_LOCAL_BIN="/usr/local/bin"
export CLOUD_PROVIDER="changeme"

if [[ -z "${CS_ENV_FILE}" ]]; then
    ENV_FILE="${BASEDIR}/env.sh"
else
    ENV_FILE="${CS_ENV_FILE}"
fi

    
echo "BASEDIR set as ${BASEDIR}"
echo "PARENTDIR set as ${PARENTDIR}"
echo "ENV_FILE set as ${ENV_FILE}"
echo "CLOUD_PROVIDER set as ${CLOUD_PROVIDER}"

# Imports
source $ENV_FILE
source $BASEDIR/colors.sh
source $BASEDIR/utils.sh

exit_error() {                         # Function: Exit with error.
  usage
  exit 1
}
exit_ok() {                         # Function: Exit with error.
  usage
  exit 0
}

usage() {                                 # Function: Print a help message.
  echo "Usage: $0 [ -i PKG ]" 1>&2 
}

Help()
{
   # Display Help
   echo "Install packages and services"
   echo
   echo "Syntax: $0 [ -i PKG ] [-h]"
   echo "options:"
   echo "i     Install a package from shared/commands"
   echo "d     Deploy a service"
   echo "v     Version of cscli"
   echo "h     Print this Help."
   echo
}

PKG=""
while getopts "i:s:v:h" option; do
    case $option in
        i)
            PKG=${OPTARG}
            install_command $PKG
            # echo cmd: $COMMAND
            ;;
        d)
            SERVICE=${OPTARG}
            source $BASEDIR/metadata.sh
            deploy_service $SERVICE
            ;;
        v)
            echo ${VERSION}
            ;;
        h)
            Help
            ;;
        :)
            echo "Error: -${OPTARG} requires an argument."
            exit_error
            ;;
        \?)
            echo "Error: Invalid option"
            usage
            exit;;
              

    esac
done
                    
            
